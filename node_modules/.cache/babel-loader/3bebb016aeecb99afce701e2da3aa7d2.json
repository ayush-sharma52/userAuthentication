{"ast":null,"code":"const redux = require(\"redux\"); //this is a reducer() which will be called for manipulating the states in the store\n//this function is called by components using dispatch method\n//also called when the store is initialised\n\n\nconst defaultState = {\n  counter: 0,\n  showCounter: true\n};\n\nfunction counterReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"Increment\") return {\n    counter: state.counter + 1,\n    showCounter: state.showCounter\n  };\n  if (action.type === \"Decrement\") return {\n    counter: state.counter - 1,\n    showCounter: state.showCounter\n  };\n\n  if (action.type === \"Increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"Toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n} //here we made the store to store states(in a state object)\n\n\nconst counterStore = redux.createStore(counterReducer); //this is a subscriber() which will be called everytime when store states changes\n\nfunction counterSubscriber() {\n  const latestState = counterStore.getState();\n  console.log(latestState);\n} //here we subscribed this function(component) to store\n\n\ncounterStore.subscribe(counterSubscriber);\nexport default counterStore;","map":{"version":3,"names":["redux","require","defaultState","counter","showCounter","counterReducer","state","action","type","amount","counterStore","createStore","counterSubscriber","latestState","getState","console","log","subscribe"],"sources":["D:/web/react.js/Redux(counter)/src/store/counterStore.js"],"sourcesContent":["const redux = require(\"redux\");\r\n\r\n//this is a reducer() which will be called for manipulating the states in the store\r\n//this function is called by components using dispatch method\r\n//also called when the store is initialised\r\nconst defaultState = { counter: 0, showCounter: true };\r\n\r\nfunction counterReducer(state = defaultState, action) {\r\n  if (action.type === \"Increment\")\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  if (action.type === \"Decrement\")\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  if (action.type === \"Increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"Toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n//here we made the store to store states(in a state object)\r\nconst counterStore = redux.createStore(counterReducer);\r\n\r\n//this is a subscriber() which will be called everytime when store states changes\r\nfunction counterSubscriber() {\r\n  const latestState = counterStore.getState();\r\n  console.log(latestState);\r\n}\r\n\r\n//here we subscribed this function(component) to store\r\ncounterStore.subscribe(counterSubscriber);\r\n\r\nexport default counterStore;\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;AACA;AACA;;;AACA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAArB;;AAEA,SAASC,cAAT,GAAsD;EAAA,IAA9BC,KAA8B,uEAAtBJ,YAAsB;EAAA,IAARK,MAAQ;EACpD,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EACE,OAAO;IACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;IAELC,WAAW,EAAEE,KAAK,CAACF;EAFd,CAAP;EAIF,IAAIG,MAAM,CAACC,IAAP,KAAgB,WAApB,EACE,OAAO;IACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;IAELC,WAAW,EAAEE,KAAK,CAACF;EAFd,CAAP;;EAIF,IAAIG,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;IAC9B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,MAD3B;MAELL,WAAW,EAAEE,KAAK,CAACF;IAFd,CAAP;EAID;;EACD,IAAIG,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OADV;MAELC,WAAW,EAAE,CAACE,KAAK,CAACF;IAFf,CAAP;EAID;;EAED,OAAOE,KAAP;AACD,C,CAED;;;AACA,MAAMI,YAAY,GAAGV,KAAK,CAACW,WAAN,CAAkBN,cAAlB,CAArB,C,CAEA;;AACA,SAASO,iBAAT,GAA6B;EAC3B,MAAMC,WAAW,GAAGH,YAAY,CAACI,QAAb,EAApB;EACAC,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACD,C,CAED;;;AACAH,YAAY,CAACO,SAAb,CAAuBL,iBAAvB;AAEA,eAAeF,YAAf"},"metadata":{},"sourceType":"module"}