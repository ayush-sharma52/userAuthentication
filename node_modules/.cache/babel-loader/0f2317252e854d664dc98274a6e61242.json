{"ast":null,"code":"// const redux = require(\"redux\");\n//now itself will integrate redux no need to call seperately\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"Authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login: state => {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  //more slices more reducer()'s then we will pass all reducers in a object and store will connect to all slices\n  reducer: {\n    Counter: counterSlice.reducer,\n    Auth: authSlice.reducer\n  }\n}); // const counterStore = redux.createStore(counterReducer);//here we made the store to store states(in a state object)\n//this is a subscriber() which will be called everytime when store states changes\n// function counterSubscriber() {\n//   const latestState = counterStore.getState();\n//   console.log(latestState);\n// }\n//here we subscribed this function(component) to store\n// counterStore.subscribe(counterSubscriber);\n\nfunction storeSubscriber() {\n  //this is a subscriber() which will be called everytime when store states changes\n  const latestState = store.getState();\n  console.log(latestState.Counter.counter, latestState.Counter.showCounter);\n} //here we subscribed this function(component) to store\n\n\nstore.subscribe(storeSubscriber);\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","Counter","counterSlice","Auth","storeSubscriber","latestState","getState","console","log","counter","showCounter","subscribe","authActions","actions"],"sources":["D:/web/react.js/Redux(counter)/src/store/appStore.js"],"sourcesContent":["// const redux = require(\"redux\");\r\n//now itself will integrate redux no need to call seperately\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialAuthState = { isAuthenticated: false };\r\n\r\nconst authSlice = createSlice({\r\n  name: \"Authentication\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login: (state) => {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  //more slices more reducer()'s then we will pass all reducers in a object and store will connect to all slices\r\n  reducer: {\r\n    Counter: counterSlice.reducer,\r\n    Auth: authSlice.reducer,\r\n  },\r\n});\r\n \r\n// const counterStore = redux.createStore(counterReducer);//here we made the store to store states(in a state object)\r\n\r\n//this is a subscriber() which will be called everytime when store states changes\r\n// function counterSubscriber() {\r\n//   const latestState = counterStore.getState();\r\n//   console.log(latestState);\r\n// }\r\n\r\n//here we subscribed this function(component) to store\r\n// counterStore.subscribe(counterSubscriber);\r\n\r\nfunction storeSubscriber() {\r\n  //this is a subscriber() which will be called everytime when store states changes\r\n  const latestState = store.getState();\r\n  console.log(latestState.Counter.counter, latestState.Counter.showCounter);\r\n}\r\n//here we subscribed this function(component) to store\r\nstore.subscribe(storeSubscriber);\r\n\r\nexport const authActions = authSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAGA,MAAMC,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAnB,CAAzB;AAEA,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,gBADsB;EAE5BC,YAAY,EAAEJ,gBAFc;EAG5BK,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAD,IAAW;MAChBA,KAAK,CAACN,eAAN,GAAwB,IAAxB;IACD,CAHO;;IAIRO,MAAM,CAACD,KAAD,EAAQ;MACZA,KAAK,CAACN,eAAN,GAAwB,KAAxB;IACD;;EANO;AAHkB,CAAD,CAA7B;AAaA,MAAMQ,KAAK,GAAGX,cAAc,CAAC;EAC3B;EACAY,OAAO,EAAE;IACPC,OAAO,EAAEC,YAAY,CAACF,OADf;IAEPG,IAAI,EAAEX,SAAS,CAACQ;EAFT;AAFkB,CAAD,CAA5B,C,CAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,SAASI,eAAT,GAA2B;EACzB;EACA,MAAMC,WAAW,GAAGN,KAAK,CAACO,QAAN,EAApB;EACAC,OAAO,CAACC,GAAR,CAAYH,WAAW,CAACJ,OAAZ,CAAoBQ,OAAhC,EAAyCJ,WAAW,CAACJ,OAAZ,CAAoBS,WAA7D;AACD,C,CACD;;;AACAX,KAAK,CAACY,SAAN,CAAgBP,eAAhB;AAEA,OAAO,MAAMQ,WAAW,GAAGpB,SAAS,CAACqB,OAA9B;AACP,eAAed,KAAf"},"metadata":{},"sourceType":"module"}