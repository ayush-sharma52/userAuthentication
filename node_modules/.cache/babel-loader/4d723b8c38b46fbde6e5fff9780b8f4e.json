{"ast":null,"code":"// const redux = require(\"redux\");\n//now itself will integrate redux no need to call seperately\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { AuthReducers } from \"./auth\";\nimport { counterReducers } from \"./counter\";\nconst store = configureStore({\n  //more slices more reducer()'s then we will pass all reducers in a object and store will connect to all slices\n  reducer: {\n    Counter: counterSlice.reducer,\n    Auth: authSlice.reducer\n  }\n}); // const counterStore = redux.createStore(counterReducer);//here we made the store to store states(in a state object)\n//this is a subscriber() which will be called everytime when store states changes\n// function counterSubscriber() {\n//   const latestState = counterStore.getState();\n//   console.log(latestState);\n// }\n//here we subscribed this function(component) to store\n// counterStore.subscribe(counterSubscriber);\n\nfunction storeSubscriber() {\n  //this is a subscriber() which will be called everytime when store states changes\n  const latestState = store.getState();\n  console.log(latestState.Counter.counter, latestState.Counter.showCounter);\n} //here we subscribed this function(component) to store\n\n\nstore.subscribe(storeSubscriber);\nexport default store;","map":{"version":3,"names":["configureStore","AuthReducers","counterReducers","store","reducer","Counter","counterSlice","Auth","authSlice","storeSubscriber","latestState","getState","console","log","counter","showCounter","subscribe"],"sources":["D:/web/react.js/Redux(counter)/src/store/appStore.js"],"sourcesContent":["// const redux = require(\"redux\");\r\n//now itself will integrate redux no need to call seperately\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { AuthReducers } from \"./auth\";\r\nimport { counterReducers } from \"./counter\";\r\n\r\n\r\n\r\nconst store = configureStore({\r\n  //more slices more reducer()'s then we will pass all reducers in a object and store will connect to all slices\r\n  reducer: {\r\n    Counter: counterSlice.reducer,\r\n    Auth: authSlice.reducer,\r\n  },\r\n});\r\n \r\n// const counterStore = redux.createStore(counterReducer);//here we made the store to store states(in a state object)\r\n\r\n//this is a subscriber() which will be called everytime when store states changes\r\n// function counterSubscriber() {\r\n//   const latestState = counterStore.getState();\r\n//   console.log(latestState);\r\n// }\r\n\r\n//here we subscribed this function(component) to store\r\n// counterStore.subscribe(counterSubscriber);\r\n\r\nfunction storeSubscriber() {\r\n  //this is a subscriber() which will be called everytime when store states changes\r\n  const latestState = store.getState();\r\n  console.log(latestState.Counter.counter, latestState.Counter.showCounter);\r\n}\r\n//here we subscribed this function(component) to store\r\nstore.subscribe(storeSubscriber);\r\n\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,eAAT,QAAgC,WAAhC;AAIA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3B;EACAI,OAAO,EAAE;IACPC,OAAO,EAAEC,YAAY,CAACF,OADf;IAEPG,IAAI,EAAEC,SAAS,CAACJ;EAFT;AAFkB,CAAD,CAA5B,C,CAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,SAASK,eAAT,GAA2B;EACzB;EACA,MAAMC,WAAW,GAAGP,KAAK,CAACQ,QAAN,EAApB;EACAC,OAAO,CAACC,GAAR,CAAYH,WAAW,CAACL,OAAZ,CAAoBS,OAAhC,EAAyCJ,WAAW,CAACL,OAAZ,CAAoBU,WAA7D;AACD,C,CACD;;;AACAZ,KAAK,CAACa,SAAN,CAAgBP,eAAhB;AAGA,eAAeN,KAAf"},"metadata":{},"sourceType":"module"}